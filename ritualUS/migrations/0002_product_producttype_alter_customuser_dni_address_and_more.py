# Generated by Django 5.1.3 on 2024-11-19 19:51

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models

# Generated by Django 5.1.3 on 2024-11-19 14:48

from django.db import migrations, models
from ritualUS.models import CustomUser, Product, ProductType, Category, Address

import os
import django


def populate_product_types(apps, schema_editor):
    categories = [
        Category.CANDLE.value,
        Category.AROMATHERAPY.value,
        Category.JEWELRY.value,
        Category.DECORATION.value,
    ]
    
    product_types = []
    modelo = apps.get_model('ritualUS','producttype')
    for category in categories:
        product_type = modelo.objects.create(name=f"{category}", category=category)
        product_types.append(product_type)
    print("Tipos de productos creados correctamente.")


def populate_users(apps, schema_editor):
    users = []
    modelo = apps.get_model('ritualUS','customuser')
    admin_user = modelo.objects.create_superuser(
        username='admin',
        password='admin123',
        first_name='Admin',
        last_name='Usuario',
        phone_number='1234567890',
        dni='ADMIN1234'
    )
    users.append(admin_user)

    for i in range(1, 6):
        user = modelo.objects.create_user(
            username=f'usuario{i}',
            password=f'usuario{i}123',
            first_name=f'Nombre{i}',
            last_name=f'Apellido{i}',
            phone_number=f'098765432{i}',
            dni=f'DNI{i}234'
        )
        users.append(user)
    
    print("Usuarios creados correctamente.")


def populate_products(apps, schema_editor):
    products = []
    modelo = apps.get_model('ritualUS','product')
    product_types = apps.get_model('ritualUS', 'producttype')
    for i in range(1, 5):
        product = modelo.objects.create(
            name=f"Producto {i}",
            description=f"Descripción del producto {i}",
            price=10.99 + (i * 2),
            stock=50,
            image="vela.jpg",
            product_type=product_types.objects.get(id=i) # Alternar entre tipos de producto
        )
        products.append(product)

    print("Productos creados correctamente!")


'''
def populate_addresses(users):
    addresses = []
    
    for user in users:
        for i in range(1, 2):  # Solo creamos 1 dirección por usuario en este ejemplo
            address = Address.objects.create(
                country='España',
                city='Madrid',
                postal_code=f'280{i}0',
                street=f'Calle Ejemplo {i}',
                number=i,
                apartment_number=f'{i}A',
                user=user
            )
            addresses.append(address)
    
    print("Direcciones creadas correctamente!")
'''

class Migration(migrations.Migration):

    dependencies = [
        ('ritualUS', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=500)),
                ('price', models.FloatField()),
                ('discount_price', models.FloatField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('stock', models.IntegerField()),
                ('department', models.CharField(blank=True, max_length=100, null=True)),
                ('section', models.CharField(blank=True, max_length=100, null=True)),
                ('factory', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('category', models.CharField(choices=[('candle', 'CANDLE'), ('aromatherapy', 'AROMATHERAPY'), ('jewelry', 'JEWELRY'), ('decoration', 'DECORATION')], default='candle', max_length=50)),
            ],
        ),
        migrations.AlterField(
            model_name='customuser',
            name='dni',
            field=models.CharField(max_length=9),
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('country', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=100)),
                ('postal_code', models.CharField(max_length=50)),
                ('street', models.CharField(max_length=100)),
                ('number', models.IntegerField()),
                ('apartment_number', models.CharField(max_length=50, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='address', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField(auto_now_add=True)),
                ('payment', models.CharField(choices=[('cash', 'CASH'), ('credit card', 'CREDIT_CARD')], max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrderProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('unity_price', models.FloatField()),
                ('order_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_product', to='ritualUS.order')),
                ('product_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_product', to='ritualUS.product')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='product_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product', to='ritualUS.producttype'),
        ),
        migrations.RunPython(populate_product_types),
        migrations.RunPython(populate_users),
        migrations.RunPython(populate_products)
    ]
